*******************************************************************************
Filename:	TODO
Description:	asm8080 To Do list.
Copyright(c):	See below.
Author(s):	Jay Cotton, Claude Sylvain
Created:	2007
Last modified:	26 December 2011
Notes:
*******************************************************************************


-------------------------------------------------------------------------------

Copyright (c) <2007-2011> <jay.cotton@oracle.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to
deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Created:	26 December 2011
Last modified:
By:		Claude Sylvain
Version:	1.00

To do:		- Expression parser process expression linearly.  This
		  can make problem with program that use expression
		  like below:
		  	MY_SYMBOL + 16 * 64
		  The above expression must be modified like below:
		  	MY_SYMBOL + (16 * 64)
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Date:		8 January 2011
Last modified:	26 December 2011
By:		Claude Sylvain
Version:	1.00
To do:
		- When a source line is [Tab]['\n'], sometime assembler
	          complain:
			"... Line too long!".

		- Line number seems to be out of phase, sometimes.

		- Assembler directives that is not (still) implemented:
			- SET
			* Done (26 December 2011)

			- ENDM
			- EXITM
			- IRP
			- IRPC
			- LOCAL (exist, but is not implemented)
			- MACRO
			- REPT
			- NAME
			- EOT
			- PAGE
			- TITLE
			- LINK
			- SYM

		- Operators that is not (still) implemented:
		  Notes: Expression evaluator do not support unary
		  operators.
			- LOW
			- HIGH
			- NOT (!)
-------------------------------------------------------------------------------








-------------------------------------------------------------------------------
Date:
By:
Version:
To do:
-------------------------------------------------------------------------------











===============================================================================
===============================================================================
				      DONE
===============================================================================
===============================================================================


-------------------------------------------------------------------------------
O.k. so here is the deal.

The Expression parser is slightly schezo, you need to brace all
the expressions, but don't over brace them... in fact the parser
could use work to just make it work better.

DB proccessor is not handeling "string",0x0d correctly.

Just found that the DS instructions are not generating any 
zeros to use up space.  This will be a big problem, needs to be
fixed.

-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		18 December 2010
By:		Claude Sylvain
Version:
To do:		- Un-activated code inside an "if/endif" is parsed, and
		  error can be displayed.
		* Fixed :-)  

		- "DB", "DW" do not work :-(
		* Fixed :-)      	

		- When there is extra "endif", there is "if underflow"
	  	  message flood.
		* Fixed :-)  
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		19 December 2010
By:		Claude Sylvain
Version:
To do:		- "ds" is not recognised !?
		* Fixed :-)
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		12 December 2010
By:		Claude Sylvain
Version:
To do:		- Labels inside and "if/endif" that is "FALSE" are
		  seens by the assembler !?
		  When this happen, no error is displayed or printed.
		* Fixed :-)

		- '$' do not work all the time.
	      	  Ex.: $0800 is evaluated as 0x0320
		* Intel 8080 assembler do not use "$" as an hexadecimal
	          base specifier, but as an "actual" adress indicator.	
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		23 December 2010
By:		Claude Sylvain
Version:
To do:		- In "db", String processing have to be improved.
		* Done.

		- In "dw", String processing have to be improved.
		* Modified.  "DW" have no more support for strings.
		  Strings are byte based and can not be defined like
		  words.

		- Assembler do not support Intel 8080 assembler numerical
	       	  base specifier.
	  	* Fixed :-)  Also, removed support for 0x.

		- "ELSE" is not implemented :-(
		* Done :-)      
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		25 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- In "JMP_proc()", handle error on operand that contain
		  strings.
		* Abandonned.  Error handling seems correct.
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		24 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- Must display an error when attempting to use a
		  16-bit operand with "IN" or "OUT" opcode.
		* Fixed.  

		- Must display an error when attempting to use a
		  16-bit operand with "CPI", "XRI", ... opcode.
		* Fixed.

		- When writing:
	      		jmp	"string"
		  There is a "Missing field" error.
		* See other task.

		- When specifiying register pair, is it acceptable
	          to specify the too registers instead of only the
		  first one?
		* Idealy, only the first register must be specified.
	          Pratically, specifying the 2 registers seems to
	  	  be rarely used in some situation.
		  So, better to keep support for specification using 2
		  registers in i8080asm.

		- Do not display an error with the following lines:
	      		inx	g
			ldax	z
		  But generate code equivalent to the following
	  	  lines:
			inx	b
			ldax	b
		* Fixed :-)

		- "DS" is not for string definition, but for
		  Data Storage creation.
		* Fixed :-)  

		- "DW" support creation of String.  This is not the
	      	  case, actually.
		* Fixed.  

		- "SET" is not implemented.
		* Moved.
		- "ENDM" is not implemented.
		* Moved.
		- "EXITM" is not implemented.
		* Moved.
		- "IRP" is not implemented.
		* Moved.
		- "IRPC" is not implemented.
		* Moved.

		- "ENDLOCAL" is not a standard Intel 8080 assembler directive.
		* Fixed (removed).  Was not implemented :-)

		- "LOCAL" exist, but is not implemented?
		* Moved.

		- "MACRO" is not implemented.
		* Moved.
		- "REPT" is not implemented.
		* Moved.
		- "NAME" is not implemented.
		* Moved.
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		26 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- Implement "HIGH" and "LOW" operators.
		* Moved.

		- "EOT" is not implemented.
		* Moved.

		- On opcodes that works with 16-bit value, check for range.
		* Done.
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		27 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- When a source line is [Tab]['\n'], sometime assembler
	          complain:
			"... Line too long!".
		* Moved.	

		- On an error on warning, display the file name, and
		  make the line number relative to that file.
		* Done :-)  

		- "PAGE" is not implemented.
		* Moved.
		- "TITLE" is not implemented.
		* Moved.
		- "LINK" is not implemented.
		* Moved.
		- "SYM" is not implemented.
		* Moved.

		- "INCLUDE" must support string without quotes.
		* Fixed :-)

		- Implement "NOT" operator.
		* Moved.

		- Implement "AND" operator.
		* Done.

		- Implement "OR" operator.
		* Done.

		- "EQU" do not support string definition.
		* This is normal.  However, "EQU" must support character
		  definition (Ex.: EQU 'a'), and this is working :-)

		- In "EQU", negative number do not work.  
		* Fixed :-)

		- Assembler crash with the following line:
			lxi	1
		* Fixed.	
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		28 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- Expression like below can not be evaluated correctly.
			(0AAh + 03h) + 1
		  Notes: (0AAh + 03h) work fine.
		* Fixed :-)

		- L'assembleur bloque sur l'instruction suivante:
	       		mvi	a, (1 / 1)
   		* Fixed.  But...  "(1 / 1)" is not seen as a valid data.
		  See other todo...

   		- L'assembleur ne peut pas assembler correctement
		  les instructions suivante:
			  start:		;@0100H
			  	mvi	a, start >> 8
			  	mvi	a, start / 256
		* Moved.		

		- L'évaluateur d'expression ne supporte pas l'évaluation
		  d'expression unaire, comme "NOT/!", etc.
		* Moved.		
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		29 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- Expression parser can not evaluate the following
		  line correctly:
			lxi	sp, TOP_MEMORY + 1
		  A bracket must be used to avoid the problem:
			lxi	sp, (TOP_MEMORY + 1)
   		* Moved.

		- Is it really necessary to make the binary output
		  always odd, and have to pad the binary with an
		  extra byte?
		* Seems to not be necessary.  So, it was removed.

		- When using "INCLUDE", comment following the file name
		  is not recognized.  So, no comment can be put there.
		* Fixed :-)  

		- Add an "-I" option to make the assembler aware of
		  other directory that the working directory, and
		  avoid to have to specify specific paths when using
		  "INCLUDE" directive.
		* Done :-)

		- Assembler jam with the following line:
		  	xri	a
		* Fixed.	

		- Comment make register pair to be not recognized on
		  the following lines:
			push	b	;My comment.
			pop	b	;My comment.
		* Fixed :-)			

		- Line number seems to be out of phase, sometimes.
		* Moved.

		- Assembler hang on:
		  	cpi	('Z' + 1)
		* Fixed :-)	

		- Assembler do not see the "+ 1" in
		  	cpi	'Z' + 1
		* Moved.	
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		30 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- When a source file do not have a "END" directive,
		  i8080-as crash.
		* Fixed :-)  

		- When a source file is included and is empty, i8080-as
		  jam.
		* Fixed :-)  
-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
Date:		31 December 2010
By:		Claude Sylvain
Version:	1.00
To do:
		- Assembler can not evaluate data in the following lines:
	       		mvi	a, (1 / 1)
   			cpi	('Z' + 1)
		* Already exist.	
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Date:		3 January 2011
By:		Claude Sylvain
Version:	1.00
To do:
		- Make "DB" support expression.
		  Ex.:
		  		db	B1-B0
			B0	rst	0
			B1	rst	1
		* Fixed :-)
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Date:		4 January 2011
By:		Claude Sylvain
Version:	1.00
To do:
		- Review all opcodes in which expression like
	          "LABEL1 + LABEL2" can be used; and make sure
		  expression can be evaluated correctly.
		  Refer to "IN" opcode and alike, as an implementation
		  example.
		* Done :-)
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Date:		1 January 2011
By:		Claude Sylvain
Version:	1.00
To do:
		- When a source line is [Tab]['\n'], sometime assembler
	          complain:
			"... Line too long!".
		* Moved...

		- Assembler can not evaluate data in the following lines:
   			- cpi	('Z' + 1)
			* Fixed.
	       		- mvi	a, (1 / 1)
   			* Fixed.
			  Also applyed to:
			  	lxi
		* Fixed.		
		
   		- L'assembleur ne peut pas assembler correctement
		  les instructions suivante:
			  start:		;@0100H
			  	mvi	a, start >> 8
			  	mvi	a, start / 256
		* Fixed.		

		- L'évaluateur d'expression ne supporte pas l'évaluation
		  d'expression unaire, comme "NOT/!", etc.
		* See other task.  

		- Expression parser can not evaluate the following
		  line correctly:
			lxi	sp, TOP_MEMORY + 1
		  A bracket must be used to avoid the problem:
			lxi	sp, (TOP_MEMORY + 1)
   		* Fixed.

		- Assembler do not see the "+ 1" in
		  	cpi	'Z' + 1
		* Fixed.
		  Also applyed to:
	  		adi, aci, sui, sbi, ani, xri, ori.	  

		- Line number seems to be out of phase, sometimes.
		* Moved...

		- Assembler directives that is not (still) implementeds:
			- SET
			- ENDM
			- EXITM
			- IRP
			- IRPC
			- LOCAL (exist, but is not implemented)
			- MACRO
			- REPT
			- NAME
			- EOT
			- PAGE
			- TITLE
			- LINK
			- SYM
		* Moved...

		- Operators that is not (still) implemented:
		  Notes: Expression evaluator do not support unary
		  operators.
			- LOW
			- HIGH
			- NOT (!)
		* Moved...

   		- In expression parser, parenthesis is not processed
		  correctly.  It is like parenthesis was not there.
		  Example of something that do not evaluate correclty:
		  	mvi	a, 0FFh - (1234h >> 8)
   		  Evaluate as 0EFh instead of 0EDh.
		* Fixed :-)  
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
Date:		9 January 2011
By:		Claude Sylvain
Version:	1.00
To do:
		- Sur l'instruction suivante:
		  	ldax	h
		  L'assembler n'indique pas que l'instruction est non
		  valide, et assemble la ligne comme étant:
			lhld	<addr>	(0x2A)
		  Mais, sans considérer l'opérande "<addr>".
		  Ref.: "mon8080.asm", ligne 781.
		* Fait :-)
-------------------------------------------------------------------------------



